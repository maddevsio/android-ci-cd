.before_script: &before_script
  image: $CI_REGISTRY_IMAGE:latest
  before_script:
    - export GRADLE_USER_HOME=cache/.gradle
    - echo $KEYSTORE | base64 -d -i > /tmp/my-release-key.keystore
    - echo $SA_JSON_KEY | base64 -d -i > key_firebase.json
    - echo $GOOGLE_SERVICES_JSON | base64 -d -i > app/google-services.json
  #tags:
  #  - "my-tag"
  cache:
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
    paths:
      - $PWD/cache/.gradle/

stages:
  - build_base_image
  - tests
  - deploy_staging
  - deploy_prod

build_base_image:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - Dockerfile
  stage: build_base_image
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
      DOCKER_HOST: tcp://docker:2375/
      DOCKER_DRIVER: overlay2
      DOCKER_TLS_CERTDIR: ""
  #tags:
  #  - "my-tag"
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY_IMAGE
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

lints:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  stage: tests
  <<: *before_script
  script:
    - bundle exec fastlane assemble_lint

unit_test:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  stage: tests
  <<: *before_script
  script:
    - bundle exec fastlane assemble_unit_test

staging_firebase:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: manual
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  stage: deploy_staging
  <<: *before_script
  script:
    - bundle exec fastlane firebase_distribution
  environment:
    name: staging

prod_firebase:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  stage: deploy_prod
  <<: *before_script
  script:
    - bundle exec fastlane firebase_distribution
  artifacts:
    paths:
      - app/build/outputs/bundle/release/app-release.aab
    expire_in: 1 day
  environment:
    name: prod

google_play:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual
  stage: deploy_prod
  <<: *before_script
  script:
    - echo $SA_JSON_GP_KEY | base64 -d -i > key_gp.json
    - bundle exec fastlane google_beta
  dependencies:
    - prod_firebase
  environment:
    name: prod-gp
  when: manual
