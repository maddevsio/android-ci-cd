default:
  image: $CI_REGISTRY_IMAGE:latest
#  tags:
#    - my-tag

before_script:
  - export GRADLE_USER_HOME=cache/.gradle
  - echo $KEYSTORE | base64 -d -i > /tmp/my-release-key.keystore
  - echo $SA_JSON_KEY | base64 -d -i > key_firebase.json
  - echo $GOOGLE_SERVICES_JSON | base64 -d -i > app/google-services.json
  - git config --global user.email $GITLAB_USER_EMAIL
  - git config --global user.name $CI_REGISTRY_USER
  - git remote set-url origin https://oauth2:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH

cache:
  key:
    files:
      - gradle/wrapper/gradle-wrapper.properties
  paths:
    - $PWD/cache/.gradle/

stages:
  - build_base_image
  - tests
  - deploy_staging
  - deploy_prod

build_base_image:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      changes:
        - Dockerfile
  stage: build_base_image
  image:
    name: gcr.io/kaniko-project/debug:769
    entrypoint: [""]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination $CI_REGISTRY_IMAGE:latest


lints:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_COMMIT_REF_NAME == "main"
  stage: tests
  script:
    - bundle exec fastlane lint

unit_test:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_COMMIT_REF_NAME == "main"
  stage: tests
  script:
    - bundle exec fastlane unit_test

staging_firebase:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: manual
    - if: $CI_COMMIT_REF_NAME == "main"
  stage: deploy_staging
  script:
    - bundle exec fastlane firebase_distribution
  environment:
    name: staging

prod_firebase:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  stage: deploy_prod
  script:
    - bundle exec fastlane firebase_distribution
  environment:
    name: prod

google_play:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      when: manual
  stage: deploy_prod
  script:
    - echo $SA_JSON_GP_KEY | base64 -d -i > /tmp/key_gp.json
    - bundle exec fastlane google_beta
  dependencies:
    - prod_firebase
  environment:
    name: prod-gp
  when: manual
